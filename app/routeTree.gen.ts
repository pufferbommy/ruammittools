/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as BlogImport } from './routes/blog'
import { Route as ToolsRouteImport } from './routes/tools/route'
import { Route as IndexImport } from './routes/index'
import { Route as ToolsRandomPersonNameIndexImport } from './routes/tools/random/person-name/index'
import { Route as ToolsRandomNumberIndexImport } from './routes/tools/random/number/index'
import { Route as ToolsCalculatorsTdeeIndexImport } from './routes/tools/calculators/tdee/index'
import { Route as ToolsCalculatorsBmrIndexImport } from './routes/tools/calculators/bmr/index'
import { Route as ToolsCalculatorsBmiIndexImport } from './routes/tools/calculators/bmi/index'

// Create/Update Routes

const BlogRoute = BlogImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any)

const ToolsRouteRoute = ToolsRouteImport.update({
  id: '/tools',
  path: '/tools',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ToolsRandomPersonNameIndexRoute = ToolsRandomPersonNameIndexImport.update(
  {
    id: '/random/person-name/',
    path: '/random/person-name/',
    getParentRoute: () => ToolsRouteRoute,
  } as any,
)

const ToolsRandomNumberIndexRoute = ToolsRandomNumberIndexImport.update({
  id: '/random/number/',
  path: '/random/number/',
  getParentRoute: () => ToolsRouteRoute,
} as any)

const ToolsCalculatorsTdeeIndexRoute = ToolsCalculatorsTdeeIndexImport.update({
  id: '/calculators/tdee/',
  path: '/calculators/tdee/',
  getParentRoute: () => ToolsRouteRoute,
} as any)

const ToolsCalculatorsBmrIndexRoute = ToolsCalculatorsBmrIndexImport.update({
  id: '/calculators/bmr/',
  path: '/calculators/bmr/',
  getParentRoute: () => ToolsRouteRoute,
} as any)

const ToolsCalculatorsBmiIndexRoute = ToolsCalculatorsBmiIndexImport.update({
  id: '/calculators/bmi/',
  path: '/calculators/bmi/',
  getParentRoute: () => ToolsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/tools': {
      id: '/tools'
      path: '/tools'
      fullPath: '/tools'
      preLoaderRoute: typeof ToolsRouteImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogImport
      parentRoute: typeof rootRoute
    }
    '/tools/calculators/bmi/': {
      id: '/tools/calculators/bmi/'
      path: '/calculators/bmi'
      fullPath: '/tools/calculators/bmi'
      preLoaderRoute: typeof ToolsCalculatorsBmiIndexImport
      parentRoute: typeof ToolsRouteImport
    }
    '/tools/calculators/bmr/': {
      id: '/tools/calculators/bmr/'
      path: '/calculators/bmr'
      fullPath: '/tools/calculators/bmr'
      preLoaderRoute: typeof ToolsCalculatorsBmrIndexImport
      parentRoute: typeof ToolsRouteImport
    }
    '/tools/calculators/tdee/': {
      id: '/tools/calculators/tdee/'
      path: '/calculators/tdee'
      fullPath: '/tools/calculators/tdee'
      preLoaderRoute: typeof ToolsCalculatorsTdeeIndexImport
      parentRoute: typeof ToolsRouteImport
    }
    '/tools/random/number/': {
      id: '/tools/random/number/'
      path: '/random/number'
      fullPath: '/tools/random/number'
      preLoaderRoute: typeof ToolsRandomNumberIndexImport
      parentRoute: typeof ToolsRouteImport
    }
    '/tools/random/person-name/': {
      id: '/tools/random/person-name/'
      path: '/random/person-name'
      fullPath: '/tools/random/person-name'
      preLoaderRoute: typeof ToolsRandomPersonNameIndexImport
      parentRoute: typeof ToolsRouteImport
    }
  }
}

// Create and export the route tree

interface ToolsRouteRouteChildren {
  ToolsCalculatorsBmiIndexRoute: typeof ToolsCalculatorsBmiIndexRoute
  ToolsCalculatorsBmrIndexRoute: typeof ToolsCalculatorsBmrIndexRoute
  ToolsCalculatorsTdeeIndexRoute: typeof ToolsCalculatorsTdeeIndexRoute
  ToolsRandomNumberIndexRoute: typeof ToolsRandomNumberIndexRoute
  ToolsRandomPersonNameIndexRoute: typeof ToolsRandomPersonNameIndexRoute
}

const ToolsRouteRouteChildren: ToolsRouteRouteChildren = {
  ToolsCalculatorsBmiIndexRoute: ToolsCalculatorsBmiIndexRoute,
  ToolsCalculatorsBmrIndexRoute: ToolsCalculatorsBmrIndexRoute,
  ToolsCalculatorsTdeeIndexRoute: ToolsCalculatorsTdeeIndexRoute,
  ToolsRandomNumberIndexRoute: ToolsRandomNumberIndexRoute,
  ToolsRandomPersonNameIndexRoute: ToolsRandomPersonNameIndexRoute,
}

const ToolsRouteRouteWithChildren = ToolsRouteRoute._addFileChildren(
  ToolsRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/tools': typeof ToolsRouteRouteWithChildren
  '/blog': typeof BlogRoute
  '/tools/calculators/bmi': typeof ToolsCalculatorsBmiIndexRoute
  '/tools/calculators/bmr': typeof ToolsCalculatorsBmrIndexRoute
  '/tools/calculators/tdee': typeof ToolsCalculatorsTdeeIndexRoute
  '/tools/random/number': typeof ToolsRandomNumberIndexRoute
  '/tools/random/person-name': typeof ToolsRandomPersonNameIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/tools': typeof ToolsRouteRouteWithChildren
  '/blog': typeof BlogRoute
  '/tools/calculators/bmi': typeof ToolsCalculatorsBmiIndexRoute
  '/tools/calculators/bmr': typeof ToolsCalculatorsBmrIndexRoute
  '/tools/calculators/tdee': typeof ToolsCalculatorsTdeeIndexRoute
  '/tools/random/number': typeof ToolsRandomNumberIndexRoute
  '/tools/random/person-name': typeof ToolsRandomPersonNameIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/tools': typeof ToolsRouteRouteWithChildren
  '/blog': typeof BlogRoute
  '/tools/calculators/bmi/': typeof ToolsCalculatorsBmiIndexRoute
  '/tools/calculators/bmr/': typeof ToolsCalculatorsBmrIndexRoute
  '/tools/calculators/tdee/': typeof ToolsCalculatorsTdeeIndexRoute
  '/tools/random/number/': typeof ToolsRandomNumberIndexRoute
  '/tools/random/person-name/': typeof ToolsRandomPersonNameIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/tools'
    | '/blog'
    | '/tools/calculators/bmi'
    | '/tools/calculators/bmr'
    | '/tools/calculators/tdee'
    | '/tools/random/number'
    | '/tools/random/person-name'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/tools'
    | '/blog'
    | '/tools/calculators/bmi'
    | '/tools/calculators/bmr'
    | '/tools/calculators/tdee'
    | '/tools/random/number'
    | '/tools/random/person-name'
  id:
    | '__root__'
    | '/'
    | '/tools'
    | '/blog'
    | '/tools/calculators/bmi/'
    | '/tools/calculators/bmr/'
    | '/tools/calculators/tdee/'
    | '/tools/random/number/'
    | '/tools/random/person-name/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ToolsRouteRoute: typeof ToolsRouteRouteWithChildren
  BlogRoute: typeof BlogRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ToolsRouteRoute: ToolsRouteRouteWithChildren,
  BlogRoute: BlogRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/tools",
        "/blog"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/tools": {
      "filePath": "tools/route.tsx",
      "children": [
        "/tools/calculators/bmi/",
        "/tools/calculators/bmr/",
        "/tools/calculators/tdee/",
        "/tools/random/number/",
        "/tools/random/person-name/"
      ]
    },
    "/blog": {
      "filePath": "blog.tsx"
    },
    "/tools/calculators/bmi/": {
      "filePath": "tools/calculators/bmi/index.tsx",
      "parent": "/tools"
    },
    "/tools/calculators/bmr/": {
      "filePath": "tools/calculators/bmr/index.tsx",
      "parent": "/tools"
    },
    "/tools/calculators/tdee/": {
      "filePath": "tools/calculators/tdee/index.tsx",
      "parent": "/tools"
    },
    "/tools/random/number/": {
      "filePath": "tools/random/number/index.tsx",
      "parent": "/tools"
    },
    "/tools/random/person-name/": {
      "filePath": "tools/random/person-name/index.tsx",
      "parent": "/tools"
    }
  }
}
ROUTE_MANIFEST_END */
